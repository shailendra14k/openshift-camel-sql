<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" id="dbcp">
        <property name="driverClassName" value="org.mariadb.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://mariadb.mysql.svc.cluster.local:3306/test"/>
        <property name="username" value="admin"/>
        <property name="password" value="admin"/>
    </bean>
    <!-- configure the Camel SQL component to use the JDBC data source -->
    <bean class="org.apache.camel.component.sql.SqlComponent" id="sql">
        <property name="dataSource" ref="dbcp"/>
    </bean>
    <camelContext id="test" trace="false" xmlns="http://camel.apache.org/schema/spring">
        <route id="Camel-SQL-Example">
            <from id="_from1" uri="timer://Test?fixedRate=true&amp;period=60000"/>
            <setHeader headerName="TableName" id="_setHeader1">
                <constant>test</constant>
            </setHeader>
            <recipientList id="_recipientList1">
                <simple>
					sql:insert into ${in.header.TableName} (id, name) values(1,'test')
				</simple>
            </recipientList>
            <log id="_log1" message="Inserted new order!"/>
        </route>
    </camelContext>
</beans>
